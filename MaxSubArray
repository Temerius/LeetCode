class Solution:


    def maxSubArray(self, nums: List[int]) -> int:
        def find_max_crossum(arr, low, mid, high):
            left_sum = float("-inf")
            sum = 0

            for i in range(mid, low - 1, -1):
                sum += arr[i]
                left_sum = max(left_sum, sum)

            right_sum = float("-inf")
            sum = 0

            for i in range(mid + 1, high + 1):
                sum += arr[i]
                right_sum = max(right_sum, sum)

            return left_sum + right_sum


        def find_max_sum(arr, low, high):
            if low == high:
                return arr[low]

            mid = (low + high) // 2

            left_sum = find_max_sum(arr, low, mid)
            right_sum = find_max_sum(arr, mid + 1, high)
            cross_sum = find_max_crossum(arr, low, mid, high)

            return max(left_sum, right_sum, cross_sum)

        return find_max_sum (nums,0,len(nums)-1)


